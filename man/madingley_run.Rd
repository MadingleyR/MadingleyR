\name{madingley_run}
\alias{madingley_run}
\title{MadingleyR: Run the Madingley model}
\usage{
madingley_run(out_dir = tempdir(),
              madingley_data = m_data,
              years = 5,
              max_cohort = 500,
              cohort_def = chrt_def,
              stock_def = stck_def,
              spatial_inputs = sptl_inp,
              model_parameters = mdl_prms,
              dispersal_off = FALSE,
              silenced = FALSE)
}
\description{This function runs the Madingley model using outputs generated by madingley_init() or by a previous model run.}

\arguments{
  \item{out_dir}{path to the folder used for writing the Madingley simulation outputs (csv file). If out_dir is not specified, madingley_run() writes the outputs to the temporary R folder. The outputs in this folder are required for the plotting functions included in MadingleyR. If the outputs need to be analysed manually or plots need to be made at a later time, please specify the output folder to make sure your files are stored}
  \item{madingley_data}{madingley output list generated by madingley_init() or by a previous model run (output list of madingley_run())}
  \item{years}{a single integer to set the simulation length (in years)}
  \item{cohort_def}{a data.frame holding the cohort definitions used for initialising the model. The template or default data.frame can be loaded using: madingley_inputs('cohort definition'). If the cohort_def is not specified, madingley_run() loads the cohort definitions internally using the madingley_inputs('cohort definition') function call}
  \item{stock_def}{a data.frame holding the stock definitions used for initialising the model. The template or default data.frame can be loaded using madingley_inputs('stock definition'). If the stock_def is not specified, madingley_run() loads the stock definitions internally using the madingley_inputs('stock definition') function call}
  \item{spatial_input}{an R list that holds all the spatial inputs required for initialising the Madingley model. The default spatial inputs can be loaded using madingley_inputs('spatial inputs'). If the spatial_input is not specified, madingley_run() loads the inputs internally using the madingley_inputs(''spatial inputs') function call}
  \item{model_parameters}{a data.frame with the default model parameters. The function call madingley_inputs('model parameters') loads the model inputs alongside a description corresponding to each parameters. If the model_parameters argument is not specified, madingley_run() loads the default model parameters internally using the madingley_inputs('model parameters') function call}
  \item{max_cohort}{a single integer holding the maximum number of cohorts allowed per spatial grid cell for computational reasons (keeping the number of interactions at a reasonable level). The Madingley model merges cohorts if they are highly similar and the maximum number of cohorts is exceeded. Lowering this value will increase model performance at expenses of resolution of cohort diversity. 1000 are normally used, but 500 may be sufficient for preliminary trials.}
  \item{output_timestep}{by default the model writes the outputs during all (12) months of the last simulation year (years - 1). This can be altered by using the output_timestep argument. The output_timestep argument is formatted as a vector containing four integers: 1) the year to output the log10 binned cohort properties 2) the year to output the full cohort properties 3) the year to output the log10 binned feeding interactions (required by the food-web plot) and 4) the year to output the full stock (autotroph) files. Please note, exporting the results will always start from the year set and continues until the end of the simulation. For example, when setting output_timestep = c(5,3,5,4) and years = 5 in Madingley_run(): \cr

--- the log10 binned cohort properties (set to 5) are never written (years = output_timestep = 5) \cr

--- the full cohort properties (set to 3) are written during the last two years (after the 3rd year until the end of the simulation) \cr

--- the log10 binned feeding interactions (set to 5) are never written (years = output_timestep = 5) \cr

--- the full stock files (set to 4) are written only during the last year of the simulation (after the 4th year). \cr

Be careful outputting many large files, it can easily fill up your hard disk. Also note that outputting the feeding interactions significantly slows down the model runtime, only use this option if needed! The fact that outputting results will start from the year set and continue to the end of the simulation, can produce a lot of results when outputs are required somewhere halfway the simulation. Letâ€™s say in a 100-year simulation we need to output the model results at year = 50, we will end up with around 50 years of outputs (from year 50 to year 100). For these cases I recommend to run the model for 50 years, output the results at the final simulation year and continue the simulation for another 50 years using a new madingley_run() instance using the previous 50 year simulation as an input (see final example below).}
  \item{dispersal_off}{If TRUE turns the dispersal off between grid cells in the Madingley model. By default dispersal_off is set to FALSE, thereby allowing dispersal between grid cells}
  \item{silenced}{When set to TRUE it suppresses the outputs printed to the R console. By default it is set to FALSE}
}
\examples{
# Print all the available options to load to the R console
madingley_inputs( )
# Load spatial parameters
sptl_inp = madingley_inputs("spatial inputs")
# Load default cohort property definitions
chrt_def = madingley_inputs("cohort definition")
# Load default stock property definitions
stck_def = madingley_inputs("stock definition")
# Load default model parameters
mdl_prms = madingley_inputs("model parameters")
# Set spatial model domain
spatial_window = c(31, 35, -5, -1)
## -------------------------------------------##
# Change parameters accordingly                #
# e.g.: sptl_inp, chrt_def, stck_def, mdl_prms #
##--------------------------------------------##
# Call the madingley_init function
m_data = madingley_init(cohort_def = chrt_def,
                        stock_def = stck_def,
                        spatial_inputs = sptl_inp,
                        spatial_window = spatial_window,
                        max_cohort = 500)
## --------------------------------------------------##
# Change parameters accordingly                       #
# e.g.: m_data sptl_inp, chrt_def, stck_def, mdl_prms #
##---------------------------------------------------##
# Run the madingley model using the m_data as input
m_data2 = madingley_run(madingley_data = m_data,
                        years = 5,
                        max_cohort = 500,
                        cohort_def = chrt_def,
                        stock_def = stck_def,
                        spatial_inputs = sptl_inp,
                        model_parameters = mdl_prms)
## ----------------------------------------------------##
# Change parameters accordingly                         #
# e.g.: m_data2 sptl_inp, chrt_def, stck_def, mdl_prms  #
##-----------------------------------------------------##
# Continue simulation run using the m_data2 as input
m_data3 = madingley_run(out_dir = "C:/MadingleyOutputs/",
                        madingley_data = m_data2,
                        years = 50,
                        max_cohort = 500,
                        cohort_def = chrt_def,
                        stock_def = stck_def,
                        spatial_inputs = sptl_inp,
                        model_parameters = mdl_prms)

## -------------------------------------------##
# Export outputs for a single year halfway the simulation duration                #
##--------------------------------------------##
# Call the madingley_init function
m_data1 = madingley_init(spatial_window = spatial_window, max_cohort = 500)
# Run for 50 years and export results during last simulation year
m_data2 = madingley_run(out_dir = "C:/MadingleyOutputs/", madingley_data = m_data1,
        years = 50, max_cohort = 500, output_timestep = c(49,49,49,49))
# Run for an additional 50 years and export during last simulation year
m_data3 = madingley_run(out_dir = "C:/MadingleyOutputs/", madingley_data = m_data2,
        years = 50, max_cohort = 500, output_timestep = c(49,49,49,49))
}
