??glmmTMB
d=fst::read.fst("Y:/Project_data/TreeChange2/Results2/Current_kg2_zonalHist_pointsBuffered1000m.fst")
head(d)
func = function(f){
ff <-- f
}
func(3)
func = function(f){
ff <<- f
}
func(3)
func = function(f){
ff <<- f
rm(ff)
}
func(3)
func = function(f){
ff <<- f
rm(ff)
}
func(3)
func = function(f){
ff <<- f
print(ls())
rm(ff)
}
func(3)
func = function(f){
ff <<- f
print(ls())
rm(list="ff",pos = ".GlobalEnv")
}
func(3)
# reinstall package
if(FALSE){
detach("package:MadingleyR", unload = TRUE) # unload if loaded, don't mind the error
remove.packages("MadingleyR")  # uninstall current package
library('remotes') # or use library('devtools') # load the remotes package
install_github('MadingleyR/MadingleyR', subdir='Package', force = TRUE, build_vignettes = FALSE) # install the MadingleyR package
}
#if(FALSE){
dir = "Z:/Repositories/MadingleyR/MadingleyR/Package/R"
lapply(list.files(dir,full.names = TRUE), source)
setwd(dir)
#}
# load MadingleyR package
library(terra)
library(MadingleyR)
madingley_version( ) # make sure new versions are installed: R package = 1.0.2, C++ src = 2.02
# set spatial window and load spatial rasters
spatial_window = c(-11, 25, 35, 60)
plot_spatialwindow(spatial_window)
spatial_inputs = madingley_inputs('spatial inputs')
# initialise model
mdata = madingley_init(spatial_window = spatial_window, spatial_inputs = spatial_inputs, max_cohort = 40)
# run spin-up for 10 years
mdata2 = madingley_run(madingley_data = mdata, years = 10, spatial_inputs = spatial_inputs, max_cohort = 40)
# plot results
plot_timelines(mdata2)
plot_densities(mdata2)
plot_trophicpyramid(mdata2)
plot_foodweb(mdata2, max_flows = 5)
plot_spatialbiomass(mdata2, functional_filter = FALSE)
plot_spatialbiomass(mdata2, functional_filter = TRUE)
plot_spatialabundances(mdata2, functional_filter = FALSE)
plot_spatialabundances(mdata2, functional_filter = TRUE)
plot_spatialabundances(mdata2, functional_filter = TRUE, plot = FALSE)
# Set spatial window
spatial_window = c(-20, 55, -36, 40) # full study area
# Can be used to check if we defined the spatial window correctly
plot_spatialwindow(spatial_window)
# Load spatial inputs
sptl_inp = madingley_inputs('spatial inputs') # load default inputs
sptl_inp
# Set years
years_spinup = 200
years_vegred = 5
years_postred = 200
madingley_version( )
# set spatial window
spatial_window = c(-20, 55, -36, 40) # full study area
# set spatial window
spatial_window = c(-20, 55, -36, 40) # full study area
plot_spatialwindow(spatial_window)
# load spatial inputs
sptl_inp = madingley_inputs('spatial inputs') # load default inputs
# set years
years_spinup = 200
years_vegred = 5
years_postred = 200
# Load cohort definitions
chrt_def = madingley_inputs('cohort definition')
chrt_def[,13] = 35
max_chrt = 350
# Load cohort definitions
chrt_def = madingley_inputs('cohort definition')
chrt_def[,13] = 35
max_chrt = 350
# Initialize model
mdata = madingley_init(spatial_window = spatial_window,
spatial_inputs = sptl_inp,
max_cohort = max_chrt,
cohort_def = chrt_def)
# set scenario parameters
m_params = madingley_inputs('model parameters') # load default model parameters
mdata_list = list(mdata2)
print(m_params[86, 2])
m_params
m_params[86, 2]
m_params
m_params[86, ]
# set scenario parameters
m_params = madingley_inputs('model parameters') # load default model parameters
mdata_list = list(mdata2)
# Run spin-up of 200 years
mdata2 = madingley_run(madingley_data = mdata, years = years_spinup,
spatial_inputs = sptl_inp, max_cohort = max_chrt,
cohort_def = chrt_def,output_timestep = rep(years_spinup-1,4))
# set scenario parameters
m_params = madingley_inputs('model parameters') # load default model parameters
# initialize model
mdata = madingley_init(spatial_window = spatial_window, spatial_inputs = sptl_inp,max_cohort = max_chrt,cohort_def = chrt_def)
# set scenario parameters
m_params = madingley_inputs('model parameters') # load default model parameters
mdata_list = list(mdata2)
# Run spin-up of 200 years
mdata2 = madingley_run(madingley_data = mdata, years = years_spinup,
spatial_inputs = sptl_inp, max_cohort = max_chrt,
cohort_def = chrt_def,output_timestep = rep(years_spinup-1,4))
# initialise model
mdata = madingley_init(spatial_window = spatial_window, spatial_inputs = spatial_inputs, max_cohort = 40)
# load MadingleyR package
library(terra)
library(MadingleyR)
madingley_version( ) # make sure new versions are installed: R package = 1.0.2, C++ src = 2.02
# set spatial window and load spatial rasters
spatial_window = c(-11, 25, 35, 60)
plot_spatialwindow(spatial_window)
spatial_inputs = madingley_inputs('spatial inputs')
# initialise model
mdata = madingley_init(spatial_window = spatial_window, spatial_inputs = spatial_inputs, max_cohort = 40)
# run spin-up for 10 years
mdata2 = madingley_run(madingley_data = mdata, years = 10, spatial_inputs = spatial_inputs, max_cohort = 40)
# plot results
plot_timelines(mdata2)
plot_densities(mdata2)
plot_trophicpyramid(mdata2)
plot_foodweb(mdata2, max_flows = 5)
plot_spatialbiomass(mdata2, functional_filter = FALSE)
plot_spatialbiomass(mdata2, functional_filter = TRUE)
plot_spatialabundances(mdata2, functional_filter = FALSE)
plot_spatialabundances(mdata2, functional_filter = TRUE)
plot_spatialabundances(mdata2, functional_filter = TRUE, plot = FALSE)
# set spatial window
spatial_window = c(-20, 55, -36, 40) # full study area
plot_spatialwindow(spatial_window)
# load spatial inputs
sptl_inp = madingley_inputs('spatial inputs') # load default inputs
# set years
years_spinup = 200
years_vegred = 5
years_postred = 200
# load cohort definitions
chrt_def = madingley_inputs('cohort definition')
chrt_def[,13] = 35
max_chrt = 350
chrt_def[,13]
chrt_def
# initialize model
mdata = madingley_init(spatial_window = spatial_window, spatial_inputs = sptl_inp,max_cohort = max_chrt,cohort_def = chrt_def)
mdata$cohorts
nrow(mdata$cohorts)
table(mdata$cohorts$GridcellIndex)
# Run spin-up of 200 years
mdata2 = madingley_run(madingley_data = mdata, years = years_spinup,
spatial_inputs = sptl_inp, max_cohort = max_chrt,
cohort_def = chrt_def,output_timestep = rep(years_spinup-1,4))
years_spinup
madingley_run(madingley_data = mdata, years = years_spinup,
spatial_inputs = sptl_inp)
spatial_window =  c(32, 34, -4, 0) # to set a smaller test region
plot_spatialwindow(spatial_window)
# set spatial window
#spatial_window = c(-20, 55, -36, 40) # full study area
spatial_window =  c(-10, 45, -10, 10) # to set a smaller test region
plot_spatialwindow(spatial_window)
# load spatial inputs
sptl_inp = madingley_inputs('spatial inputs') # load default inputs
# set years
years_spinup = 200
years_vegred = 5
years_postred = 200
# load cohort definitions
chrt_def = madingley_inputs('cohort definition')
chrt_def[,13] = 35
max_chrt = 350
# initialize model
mdata = madingley_init(spatial_window = spatial_window, spatial_inputs = sptl_inp,max_cohort = max_chrt,cohort_def = chrt_def)
nrow(mdata$cohorts)
table(mdata$cohorts$GridcellIndex)
# Run spin-up of 200 years
mdata2 = madingley_run(madingley_data = mdata, years = years_spinup,
spatial_inputs = sptl_inp, max_cohort = max_chrt,
cohort_def = chrt_def,output_timestep = rep(years_spinup-1,4))
# Set model params
spatial_window = c(31, 35, -5, -1) # region of interest: Serengeti
sptl_inp = madingley_inputs('spatial inputs') # load default inputs
plot_spatialwindow(spatial_window)
sptl_inp = madingley_inputs('spatial inputs') # load default inputs
# Initialise model
mdata = madingley_init(spatial_window = spatial_window, spatial_inputs = sptl_inp)
# Run spin-up of 100 years
mdata2 = madingley_run(madingley_data = mdata,
spatial_inputs = sptl_inp,
years = 100)
detach("package:MadingleyR", unload = TRUE) # unload if loaded, don't mind the error
remove.packages("MadingleyR")  # uninstall current package
library('remotes') # or use library('devtools') # load the remotes package
install_github('MadingleyR/MadingleyR', subdir='Package', force = TRUE, build_vignettes = FALSE) # install the MadingleyR package
